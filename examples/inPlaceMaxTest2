int [] a;
int i, alength, v;

requires 0 <= alength;
requires i == 0;
ensures forall int j, i==alength & 0 <= j & j < alength ==> a[j] == v;

while (i < alength) do
:: a[i] == v -> i = i + 1;
:: true      -> a[i] = v; i = i + 1;
od




(assert
	(forall ((It1 Time))
		(=>
			(forall ((It2 Time))
				(=>
					(< It1 It2)
					(not 
						(= (i It1) P)
					)
				)
			)
		)
	)
)